import { StatusBar } from 'expo-status-bar';
import React, {useState} from 'react';
import { StyleSheet, Text, View, Animated } from 'react-native';
import Card from './modules/Card'

const Perks = ['Верный(ая)', 'Считает тебя самым красивым человеком в мире', 'Можно довериться', 'Уважает тебя', 'Никогда тебя не обманет', 'Спокойно себя ведет', 'Можно положиться', 'Вежливый(ая)', 'Самый смешной человек в мире', 'Нежный(ая)', 'Хороший слушатель', 'Поддерживает тебя', 'Щедрый(ая)', 'Очень общительный человек', 'Всегда находит время на тебя', 'Всегда дарит идеальные подарки', 'Любит приключения', 'Любит тебя без всяких условий', 'Понравится твоим родителям', 'Твои друзья и враги завидуют тебе', 'Есть магический ковер', 'Помогает старым людям как волонтер', 'Любит собак', 'Любит кошек', 'Любит театр', 'Волонтер приюта для животных', 'Много путешествует', 'По-настоящему увлекается вином', 'Любит видеоигры', 'Имеет билеты в первый ряд на каждый концерт', 'Имеет билеты в первый ряд на каждое спортивное мероприятие', 'Любит спорт', 'Любит природу', 'Владеет вашим любимым музеем', 'Те же любимые фильмы', 'Те же любимые книги', 'Те же любимые блюда', 'Та же любимая музыка', 'Живет вне сети', 'Любит детей', 'Миллионер', 'Самый физически привлекательный человек, которого вы когда-либо видели', 'Владеет виноградником', 'Владеет очаровательным кафе', 'Живет на 100 акрах прибрежной зоны', 'Владеет частным самолетом из чистого золота', 'Имеет волшебную сумку, в которой содержится неограниченное количество сыра', 'Владеет 500-футовой яхтой', 'Владеет островом на Багамах', 'Владеет 100 лошадьми', 'Владеет вашей любимой спортивной командой', 'Владеет пентхаусом в вашем любимом городе', 'Жертвует миллиарды на вашу любимую благотворительность', 'Владеет машиной времени', 'Живет в замке', 'У него/нее самые лучшие волосы на свете', 'Владеет единорогом', 'IQ гениального уровня', 'Владеет успешным стартапом', 'Может привести вас обоих в любое место', 'Тебе никогда не придется работать, пока ты встречаешься с ними', 'Ты никогда не заболеешь, пока будешь с ним/ней встречаться', 'Вы не состаритесь, пока будете встречаться с ним/ней', 'Говорит на всех романтических языках', 'Вы никогда не наберете вес, пока будете встречаться с ним/ней', 'Имеет голос ангела', 'Профессиональный серфер', 'Ученый-ракетчик', 'Модель', 'Профессиональный футболист', 'Известный художник', 'Преподаватель английского языка в колледже', 'Пожарный', 'Астронавт', 'Президент', 'Чемпион родео', 'Профессиональный борец', 'Знаменитая кинозвезда', 'Известный музыкант', 'Знаменитый рэпер', 'Супермодель', 'Профессиональный шеф-повар', 'Лучший в мире парикмахер-стилист', 'Нейрохирург', 'Юрист', 'Лучший в мире менеджер по рекламе', 'Пилот авиакомпании', 'Инструктор по вращению', 'Автор бестселлеров', 'Знаменитость на YouTube', 'Лесоруб', 'Органический фермер', 'Дублер-каскадер', 'Смотритель парка', 'Лыжный инструктор', 'Фотограф', 'Известный модельер', 'Из королевской семьи', 'Чемпион мира по охоте', 'Награжден почетной медалью', 'Был/была в новостях за спасение котенка', 'Самый хорошо пахнущий человек в мире', 'Инструктор по йоге', 'Горячий(ая) бариста', 'Есть 8 кубиков', 'Олимпийский(ая) гимнаст(ка)', 'Никогда не приходит преждевременно', 'Любит обниматься', 'Солист вашей любимой группы', 'Красивые глаза', 'Полностью слеп(а) ко всем твоим недостаткам', 'С этим человеком вы чувствуете себя в безопаности', 'Имеет самых горячих друзей', 'Есть близнец', 'Может летать', 'Супергерой', 'Любит посмеяться', 'Делает ароматические свечи', 'Обожает 80-е', 'Готовит все ваши любимые блюда', 'Знает все слова ваших любимых детских телевизионных тематических песен', 'Никогда ни в чем тебя не винит', 'Вы можете получить бесплатные напитки навсегда в любом баре мира', 'Создает приюты для бездомных', 'Их поцелуи излечивают рак', 'Является отличным собеседником', 'Дарит самые лучшие объятия', 'Всегда знает, как поднять тебе настроение', 'Потрясающий(ая) танцор(вщица)', 'Всегда защищает тебя', 'Может заказать вам столик в любом 5-звездочном ресторане в любое время и в любом месте', 'Может уволить вашего самого ненавистного коллегу или босса', 'Его/ее пердеж пахнет цветами', 'Никогда не пукает', 'Его/ее утреннее дыхание пахнет свежеиспеченным печеньем', 'Жаворонок', 'Сова', 'Любит свою работу', 'Имеет все те же увлечения, что и вы', 'Может разговаривать с животными', 'Владеет настоящими динозаврами', 'Делает отличный массаж']
const Flags = ['Реконструктор гражданской войны', 'Расист', 'Сексист', 'Должен правительству миллион долларов', 'Заключенный в камере смертников', 'Думает, что ты уродина', 'Всегда покрыт муравьями', 'Ненавидит детей', 'Говорит только ужасными каламбурами', 'Видит призрак каждого, кто когда-либо умирал', 'Пристрастился к крэку', 'Пристрастился к отпускаемым по рецепту лекарствам', 'Ему/ей шесть лет', 'Говорит только с сарказмом', 'Пукает каждый раз, когда целует тебя', 'Пинает каждое животное, которое видет', 'Самый дурно пахнущий человек в мире', 'Каннибал-любитель', 'Использует слово "расслабься" в каждом предложении', 'Проводит каждое свидание, используя приложения для знакомств', 'Не может принимать решения', 'Говорит только в крике', 'Говорит только на деловых модных словечках', 'Ест цветные карандаши', 'Имеет дюжину детей от дюжины партнеров', 'Разыскивается во всех штатах, кроме Флориды', 'Это хоббит', 'Имеет девятнадцать детей', 'Строит ковчег', 'Всегда на сегвее', 'Плачет, чтобы заснуть каждую ночь', 'Подсчитывает ваши калории', 'Не может продержаться на работе дольше двадцати минут', 'Выглядит и пахнет точно так же, как твой отец', 'Тошнит каждый раз, когда они видят твое лицо', 'Это твой клон', 'Тает, если намокнет', 'Зевает каждый раз, когда вы начинаете предложение', 'Первое имя - "Какашка".', 'Прозвище в колледже: Рвотная промежность', 'Все еще в четвертом классе', 'Телепортируется на Северный полюс каждый раз, когда произносит слово "любовь"', 'Каждый раз, когда ты думаешь о них, тебя тошнит', 'Ведет вас на терапию для пар на первом свидании', 'Говорит только в текстах бойз-бэнда', 'Никогда не произносил ни слова правильно', 'Собирает человеческие черепа', 'Крадет что-нибудь из каждого магазина, в который они заходят', 'Навязчивый лжец', 'Всегда носите Bluetooth-гарнитуру', 'Человек, которого вы ненавидели больше всего в старшей школе', 'Публикует все ваши сообщения и электронные письма в Интернете', 'Ногти длиной 3 метра', 'Общается с вами только по факсу', 'Говорит только на клингонском', 'Не перестают говорить о своей матери', 'Имеет руки-ножницы', 'Описывает всю еду как "вкуснятину"', 'Не разрешает Wi-Fi в доме', 'Отказывается мыть руки', 'Обет безбрачия', 'Не приучен к горшку', 'Является серийным убийцей', 'Говорит только в текстах песен Диснея', 'Все еще использует флип-телефон', 'Имеет двух других супругов', 'Ест только жареную во фритюре пищу', 'Живет вне сети', 'Пытается заплатить за все сельскохозяйственными животными', 'Никогда не прекращает играть на гавайской гитаре', 'Регулярно проводит чаепития для кукол', 'Является самым старым человеком на Земле', 'Постоянно делает селфи', 'Говорит "перестань", когда ты плачешь на похоронах', 'Добавляет вас в качестве экстренного контакта на первом свидании', 'Говорит только о себе', 'Говорит тебе успокоиться после всего, что ты говоришь', 'Приветствует людей, обнюхивая их задницы', 'Женат/Замужем', 'Это зомби', 'Забывает кошелек каждый вечер свидания', 'Крадет пряди твоих волос', 'Поцелуи на вкус как какашки', 'Повторяет ваши шутки, но громче', 'Навязчиво лижет дверные ручки', 'Физически не способен/способна задать вопрос', 'Ревнует к своему питомцу', 'Боится солнечного света', 'Говорит с постоянно меняющимся иностранным акцентом', 'Всегда пьяный(ая)', 'Приводит бывшего/бывшую на первое свидание', 'Приводит маму на первое свидание', 'Рыгает и дует тебе в лицо', 'Никогда не прекращает говорить', 'Постоянно замышляет убить тебя', 'Открытым ртом целует своих питомцев', 'Сразу же пытается убить вас вилкой', 'Супер цепкий', 'Открытым ртом целует своих братьев и сестер', 'Приветствует вас ударом головы', 'Вечно ковыряют в носу', 'Говорит только в хэштегах', 'Повторяет все строки из Титаника во сне', 'Рассказывает вслух обо всем, что делает', 'Ставит "воздушные кавычки" вокруг "каждого слова", которое они говорят', 'Берет с тебя рубль каждый раз, когда ты произносишь ругательство', 'Мертв(а)', 'Всегда голый(ая)', 'На лице вытатуированы имена всех их бывших', 'Носит только одежду из человеческих волос', 'Носит подгузники, потому что это "удобнее"', 'Смеется только над своими собственными шутками', 'Только что вышел(ла) из тюрьмы', '50 оттенков серого - единственная книга, которую прочитал(а)', 'Не думает, что женщины должны голосовать', 'Преследует тебя со средней школы', 'На 40 лет старше, чем был(а) на фотографии в профиле', 'Подмигивает тебе после всего, что говорит', 'Клянется, что ты выглядишь в точности как его/ее сестра', 'Активист за права мужчин', 'Заканчивает каждый разговор словами "вы свободны"', 'Разговаривать можно только через марионеток', 'Категорически отказывается бриться', 'Кричит "наушники!" всякий раз, когда слышит плохое слово', 'Не перестает жонглировать', 'Тупое лицо', 'Продолжает говорить об своем бывшем партнере', 'Разговаривает исключительно в смайликах', 'Отказывается удалять профиль онлайн-знакомств', 'Может есть только из чужих рук', 'Отказывается закрывать лицо во время чихания', 'Отказывается отрывать взгляд от телефона', 'Продолжает говорить о ком-то, кто выглядит точно так же, как ты ', 'Думает, что Сумерки заслужили Оскара', 'Боится светофоров', 'Не понимает твоих шуток', 'В прямом эфире твитит все о вашем свидании', 'Переспал с одним из твоих родителей ', 'До тех пор, пока ты будешь встречаться с ним/ней, все твои друзья будут ненавидеть тебя', 'Всегда одевается как клоун', 'Постоянно фристайлит', 'Говорит только в мотивационных цитатах', 'Две половины лица не совпадают', 'Не знает и не понимает ни одного слова, начинающегося на букву "Д"', 'Буквально не видят никого в мире, кроме тебя', 'Всегда заходит в шутке слишком далеко', 'Находится на каждой модной диете', 'Называет своих питомцев своими детьми', 'Статика шокирует вас каждый раз, когда вы прикасаетесь', 'Аллергия на все ваши любимые продукты', 'Через слово говорит "типа"', 'У него/нее морда мопса', 'Каждое предложение начинается с "на самом деле"', 'Живет в спальне с восемью чуваками', 'Не любит музыку', 'Думает, что умнее тебя', 'Пока вы встречаетесь с ним/ней, вы можете есть только еду из долларового меню']

const Perks18 = []
const Flags18 = []

let PerksCopy = Perks.slice()
let FlagsCopy = Flags.slice()

export default function App() 
{
  const [selectedOption, setSelectedOption] = useState('Дети')
  const Option = (prop)=>{return(
      <View onTouchEnd = {() => {setSelectedOption(prop.text)}}
      style = {{
          backgroundColor : prop.text == selectedOption ? 'white' : 'white',
          elevation : prop.text == selectedOption ? 5 : 0,
          width: '50%',
          borderRadius : 20,
          height: '100%',
          justifyContent: 'center',
      }}>
          <Text style = {{fontSize: 25, textAlign: 'center'}}>{prop.text}</Text>
      </View>
  )}


  const [perk1, setPerk1] = useState('Достоинство')
  const [perk2, setPerk2] = useState('Достоинство')
  const [flag, setFlag] = useState('Недостаток')

  const [rotateX1, setRotateX1] = useState(new Animated.Value(0))
  const [rotateX2, setRotateX2] = useState(new Animated.Value(0))
  const [rotateX3, setRotateX3] = useState(new Animated.Value(0))

  const [anim1, setAnim1] = useState(false)
  const [anim2, setAnim2] = useState(false)
  const [anim3, setAnim3] = useState(false)

  return (
    <View style={styles.container}>
      <View style = {styles.header}>
        <Text style = {[styles.headerText, {color: 'red'}]}>Red</Text>
        <Text style = {styles.headerText}>Flags</Text>
      </View>
      <View style = {
        {
            justifyContent : 'space-around',
            flexDirection : 'row',
            width: 250,
            alignSelf : 'center',
            elevation: 3,
            marginBottom: 20,
            marginTop: 20,
            borderRadius: 20,
            backgroundColor: 'white',
            height: 50,
            alignItems :'center'
        }}>
        <Option text = 'Дети'/>
        <Option text = '18+'/>
      </View>
      <View style = {styles.cards}>
        <Card 
          text = {perk1} 
          rotateX = {rotateX1}
          anim = {anim1}
          setAnim = {setAnim1}
          onAnimationEnded = {() => {
            if(perk1 == 'Достоинство') 
            {
              if(PerksCopy.length == 0)
              {
                PerksCopy = Perks.slice()
              }
              let i = Math.floor(Math.random() * PerksCopy.length)
              setPerk1(PerksCopy[i]); 
              PerksCopy.splice(i, 1)
              setAnim1(true) 
            }}}
          />

        <Card 
          text = {perk2}
          rotateX = {rotateX2}
          anim = {anim2}
          setAnim = {setAnim2}
          onAnimationEnded = {() => {
            if(perk2 == 'Достоинство') 
            { 
              if(PerksCopy.length == 0)
              {
                PerksCopy = Perks.slice()
              }
              let i = Math.floor(Math.random() * PerksCopy.length)
              setPerk2(PerksCopy[i]); 
              PerksCopy.splice(i, 1)
              setAnim2(true) 
            }}}
            />

        <Card 
          text = {flag} 
          flag = {true}
          rotateX = {rotateX3}
          anim = {anim3}
          setAnim = {setAnim3}
          onAnimationEnded = {() => {
            if(flag == 'Недостаток') 
            { 
              if(FlagsCopy.length == 0)
              {
                FlagsCopy = Flags.slice()
              }
              let i = Math.floor(Math.random() * FlagsCopy.length)
              setFlag(FlagsCopy[i]); 
              FlagsCopy.splice(i, 1)
              setAnim3(true) 
            }}}
            />

      </View>

      <View style = {styles.button} onTouchEnd = {() => {
        if(flag != 'Недостаток' && perk1 != 'Достоинство' && perk2 != 'Достоинство')
        {
          setFlag('Недостаток')
          setPerk1('Достоинство')
          setPerk2('Достоинство')

          setAnim1(false)
          setAnim2(false)
          setAnim3(false)

          setRotateX1(new Animated.Value(0))
          setRotateX2(new Animated.Value(0))
          setRotateX3(new Animated.Value(0))
        }
      }}>
        <Text style = {styles.buttonText}>Следующий игрок</Text>
      </View>

      <StatusBar style="auto" />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white',
  },
  header:{
    marginTop: 50,
    marginLeft: 30,
    flexDirection: 'row',

  },
  headerText:{
    fontSize: 50,
    fontWeight: 'bold'
  },
  cards : {
    width : '100%',
    height: '90%',
    bottom: 0,
    justifyContent:'center',
    alignItems: 'center',
    position : 'absolute'
  },
  button: {
      backgroundColor : 'red',
      width : 250,
      borderRadius : 10,
      justifyContent : 'center',
      alignItems : 'center',
      position: 'absolute',
      bottom: 20,
      alignSelf: 'center'
  },
  buttonText : {
    color : 'white',
    fontSize: 20,
    margin: 10
  }
});
